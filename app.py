
import streamlit as st
import google.generativeai as gen_ai



# C·∫•u h√¨nh c√†i ƒë·∫∑t trang Streamlit
st.set_page_config(
    page_title="Tr√≤ chuy·ªán v·ªõi Gemini-Pro!",
    page_icon="ü§ñ",  # Bi·ªÉu t∆∞·ª£ng Favicon
    layout="centered",  # T√πy ch·ªçn b·ªë c·ª•c trang
)

# Thi·∫øt l·∫≠p m√¥ h√¨nh AI Gemini-Pro c·ªßa Google
gen_ai.configure(api_key='AIzaSyCb_qq6aqOHM_6jwMTJiW0v0kb9FkPnsos')
model = gen_ai.GenerativeModel('gemini-pro')


# H√†m ƒë·ªÉ d·ªãch vai tr√≤ gi·ªØa Gemini-Pro v√† thu·∫≠t ng·ªØ c·ªßa Streamlit
def translate_role_for_streamlit(user_role):
    if user_role == "model":
        return "assistant"
    else:
        return user_role


# Kh·ªüi t·∫°o phi√™n tr√≤ chuy·ªán trong Streamlit n·∫øu ch∆∞a c√≥
if "chat_session" not in st.session_state:
    st.session_state.chat_session = model.start_chat(history=[])


# Hi·ªÉn th·ªã ti√™u ƒë·ªÅ chatbot tr√™n trang
st.title("Gemini - ChatBot")

# Hi·ªÉn th·ªã l·ªãch s·ª≠ tr√≤ chuy·ªán
for message in st.session_state.chat_session.history:
    with st.chat_message(translate_role_for_streamlit(message.role)):
        st.markdown(message.parts[0].text)

# Tr∆∞·ªùng nh·∫≠p li·ªáu cho tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng
user_prompt = st.chat_input("H·ªèi Gemini-Pro...")
if user_prompt:
    # Th√™m tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng v√†o tr√≤ chuy·ªán v√† hi·ªÉn th·ªã n√≥
    st.chat_message("user").markdown(user_prompt)

    # G·ª≠i tin nh·∫Øn c·ªßa ng∆∞·ªùi d√πng ƒë·∫øn Gemini-Pro v√† nh·∫≠n ph·∫£n h·ªìi
    gemini_response = st.session_state.chat_session.send_message(user_prompt)

    # Hi·ªÉn th·ªã ph·∫£n h·ªìi c·ªßa Gemini-Pro
    with st.chat_message("assistant"):
        st.markdown(gemini_response.text)
